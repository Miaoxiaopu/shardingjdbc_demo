# ==========================================分库分表===================================================================
# 3个库，每个库都有3张拆成3份的表
# ======================================================================================================================

#数据源名称，多数据源以逗号分隔
spring.shardingsphere.datasource.names=filedb1,filedb2,filedb3
#数据源1
spring.shardingsphere.datasource.filedb1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.filedb1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.filedb1.url=jdbc:mysql://192.168.116.131:7786/filedb1?useUnicode\=true&characterEncoding\=utf-8&useSSL\=false&serverTimezone\=GMT&allowPublicKeyRetrieval\=true
spring.shardingsphere.datasource.filedb1.username=user1
spring.shardingsphere.datasource.filedb1.password=root
#数据源2
spring.shardingsphere.datasource.filedb2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.filedb2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.filedb2.url=jdbc:mysql://192.168.116.132:7786/filedb2?useUnicode\=true&characterEncoding\=utf-8&useSSL\=false&serverTimezone\=GMT&allowPublicKeyRetrieval\=true
spring.shardingsphere.datasource.filedb2.username=user1
spring.shardingsphere.datasource.filedb2.password=root
#数据源3
spring.shardingsphere.datasource.filedb3.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.filedb3.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.filedb3.url=jdbc:mysql://192.168.116.134:7786/filedb3?useUnicode\=true&characterEncoding\=utf-8&useSSL\=false&serverTimezone\=GMT&allowPublicKeyRetrieval\=true
spring.shardingsphere.datasource.filedb3.username=user1
spring.shardingsphere.datasource.filedb3.password=root
#打印日志
#spring.shardingsphere.masterslave.props.sql.show=true
spring.shardingsphere.props.sql.show=true

#分库
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=file_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=filedb$->{file_id % 3 + 1}


#分表
spring.shardingsphere.sharding.tables.file_info.actual-data-nodes=filedb$->{1..3}.file_info$->{1..3}
# 以file_id列分表
spring.shardingsphere.sharding.tables.file_info.table-strategy.inline.sharding-column=file_id
#内联分片算法(使用file_id % 2来分表)如果需要复杂的算法，使用下面的精确和范围分片算法
spring.shardingsphere.sharding.tables.file_info.table-strategy.inline.algorithm-expression=file_info$->{file_id % 3 + 1}
#范围分片算法
#spring.shardingsphere.sharding.tables.file_info.table-strategy.standard.sharding-column=file_id
#spring.shardingsphere.sharding.tables.file_info.table-strategy.standard.range-algorithm-class-name=com.solider76.oo.service.chat.config.MyShardingConfig
#精确分片算法
#spring.shardingsphere.sharding.tables.file_info.table-strategy.standard.sharding-column=file_id
#spring.shardingsphere.sharding.default-table-strategy.standard.precise-algorithm-class-name=-algorithm-class-name=com.solider76.oo.service.chat.config.MyShardingConfig


#表主键生成算法
spring.shardingsphere.sharding.tables.file_info.key-generator.column=file_id
spring.shardingsphere.sharding.tables.file_info.key-generator.type=SNOWFLAKE
